"""initial_migration_complete_database_structure

Revision ID: d6825691d7a1
Revises: 
Create Date: 2024-07-17 05:29:21.171974

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session
from datetime import datetime
import random


# revision identifiers, used by Alembic.
revision = 'd6825691d7a1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mahasiswa',
    sa.Column('nim', sa.String(length=20), nullable=False),
    sa.Column('nama', sa.String(length=100), nullable=False),
    sa.Column('program_studi', sa.String(length=50), nullable=False),
    sa.Column('ipk', sa.Float(), nullable=False),
    sa.Column('sks', sa.Integer(), nullable=False),
    sa.Column('persen_dek', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('nim')
    )
    op.create_table('saw_criteria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('is_cost', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saw_criteria_id'), 'saw_criteria', ['id'], unique=False)
    op.create_table('klasifikasi_kelulusan',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nim', sa.String(length=20), nullable=False),
    sa.Column('kategori', sa.String(length=50), nullable=False),
    sa.Column('nilai_fuzzy', sa.Float(), nullable=False),
    sa.Column('ipk_membership', sa.Float(), nullable=False),
    sa.Column('sks_membership', sa.Float(), nullable=False),
    sa.Column('nilai_dk_membership', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nim'], ['mahasiswa.nim'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nim')
    )
    op.create_table('nilai',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nim', sa.String(length=20), nullable=False),
    sa.Column('tahun', sa.Integer(), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('kode_matakuliah', sa.String(length=20), nullable=False),
    sa.Column('nama_matakuliah', sa.String(length=100), nullable=False),
    sa.Column('nilai', sa.String(length=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nim'], ['mahasiswa.nim'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saw_final_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nim', sa.String(), nullable=False),
    sa.Column('final_score', sa.Float(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['nim'], ['mahasiswa.nim'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saw_final_results_id'), 'saw_final_results', ['id'], unique=False)
    op.create_table('saw_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nim', sa.String(), nullable=False),
    sa.Column('nilai_akhir', sa.Float(), nullable=False),
    sa.Column('ranking', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nim'], ['mahasiswa.nim'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saw_results_id'), 'saw_results', ['id'], unique=False)
    # ### end Alembic commands ###
    
    # ### Seeder Data Real ###
    # Seed data mahasiswa dengan data real
    mahasiswa_data = [
        {"nim": "2021001", "nama": "Ahmad Rizki", "program_studi": "Teknik Informatika", "ipk": 3.85, "sks": 120, "persen_dek": 5.2},
        {"nim": "2021002", "nama": "Siti Nurhaliza", "program_studi": "Sistem Informasi", "ipk": 3.92, "sks": 132, "persen_dek": 2.1},
        {"nim": "2021003", "nama": "Budi Santoso", "program_studi": "Teknik Informatika", "ipk": 3.45, "sks": 108, "persen_dek": 8.5},
        {"nim": "2021004", "nama": "Dewi Sartika", "program_studi": "Sistem Informasi", "ipk": 3.78, "sks": 126, "persen_dek": 4.3},
        {"nim": "2021005", "nama": "Muhammad Fajar", "program_studi": "Teknik Informatika", "ipk": 3.12, "sks": 96, "persen_dek": 12.8},
        {"nim": "2021006", "nama": "Nina Safitri", "program_studi": "Sistem Informasi", "ipk": 3.65, "sks": 114, "persen_dek": 6.7},
        {"nim": "2021007", "nama": "Rendi Pratama", "program_studi": "Teknik Informatika", "ipk": 2.98, "sks": 90, "persen_dek": 15.2},
        {"nim": "2021008", "nama": "Lina Marlina", "program_studi": "Sistem Informasi", "ipk": 3.88, "sks": 138, "persen_dek": 1.8},
        {"nim": "2021009", "nama": "Doni Kusuma", "program_studi": "Teknik Informatika", "ipk": 3.25, "sks": 102, "persen_dek": 10.5},
        {"nim": "2021010", "nama": "Rina Wati", "program_studi": "Sistem Informasi", "ipk": 3.55, "sks": 120, "persen_dek": 7.3},
        {"nim": "2021011", "nama": "Eko Prasetyo", "program_studi": "Teknik Informatika", "ipk": 3.72, "sks": 126, "persen_dek": 3.9},
        {"nim": "2021012", "nama": "Yuni Safitri", "program_studi": "Sistem Informasi", "ipk": 3.18, "sks": 96, "persen_dek": 11.4},
        {"nim": "2021013", "nama": "Agus Setiawan", "program_studi": "Teknik Informatika", "ipk": 3.95, "sks": 144, "persen_dek": 0.8},
        {"nim": "2021014", "nama": "Maya Indah", "program_studi": "Sistem Informasi", "ipk": 3.33, "sks": 108, "persen_dek": 9.6},
        {"nim": "2021015", "nama": "Joko Widodo", "program_studi": "Teknik Informatika", "ipk": 3.68, "sks": 120, "persen_dek": 5.1}
    ]
    
    # Insert mahasiswa data
    connection = op.get_bind()
    for data in mahasiswa_data:
        connection.execute(
            sa.text("""
                INSERT INTO mahasiswa (nim, nama, program_studi, ipk, sks, persen_dek, created_at, updated_at)
                VALUES (:nim, :nama, :program_studi, :ipk, :sks, :persen_dek, :created_at, :updated_at)
            """),
            {
                "nim": data["nim"],
                "nama": data["nama"],
                "program_studi": data["program_studi"],
                "ipk": data["ipk"],
                "sks": data["sks"],
                "persen_dek": data["persen_dek"],
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            }
        )
    
    # Seed data kriteria SAW
    criteria_data = [
        {"name": "IPK", "weight": 0.4, "is_cost": False},
        {"name": "SKS", "weight": 0.3, "is_cost": False},
        {"name": "Persentase D, E, K", "weight": 0.3, "is_cost": True}
    ]
    
    # Insert criteria data
    for data in criteria_data:
        connection.execute(
            sa.text("""
                INSERT INTO saw_criteria (name, weight, is_cost, created_at, updated_at)
                VALUES (:name, :weight, :is_cost, :created_at, :updated_at)
            """),
            {
                "name": data["name"],
                "weight": data["weight"],
                "is_cost": data["is_cost"],
                "created_at": datetime.utcnow(),
                "updated_at": datetime.utcnow()
            }
        )
    
    # Seed data nilai mahasiswa
    mata_kuliah = [
        {"kode": "IF101", "nama": "Pemrograman Dasar"},
        {"kode": "IF102", "nama": "Matematika Diskrit"},
        {"kode": "IF103", "nama": "Algoritma dan Struktur Data"},
        {"kode": "IF104", "nama": "Basis Data"},
        {"kode": "IF105", "nama": "Pemrograman Web"},
        {"kode": "IF106", "nama": "Jaringan Komputer"},
        {"kode": "IF107", "nama": "Sistem Operasi"},
        {"kode": "IF108", "nama": "Pemrograman Berorientasi Objek"},
        {"kode": "IF109", "nama": "Analisis dan Desain Sistem"},
        {"kode": "IF110", "nama": "Statistika"},
        {"kode": "IF111", "nama": "Kecerdasan Buatan"},
        {"kode": "IF112", "nama": "Grafika Komputer"},
        {"kode": "IF113", "nama": "Keamanan Sistem"},
        {"kode": "IF114", "nama": "Mobile Programming"},
        {"kode": "IF115", "nama": "Cloud Computing"}
    ]
    
    # Generate nilai untuk setiap mahasiswa
    for nim in range(2021001, 2021016):
        nim_str = str(nim)
        num_courses = random.randint(8, 12)
        selected_courses = random.sample(mata_kuliah, num_courses)
        
        for course in selected_courses:
            semester = random.randint(1, 8)
            tahun = 2021 + (semester - 1) // 2
            
            # Probabilitas nilai berdasarkan IPK mahasiswa (data real)
            if nim == 2021001:  # IPK 3.85 - Mahasiswa dengan nilai tinggi
                nilai_weights = {"A": 0.4, "A-": 0.4, "B+": 0.2, "B": 0.0, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021002:  # IPK 3.92 - Mahasiswa dengan nilai sangat tinggi
                nilai_weights = {"A": 0.5, "A-": 0.3, "B+": 0.2, "B": 0.0, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021003:  # IPK 3.45 - Mahasiswa dengan nilai menengah-tinggi
                nilai_weights = {"A": 0.2, "A-": 0.3, "B+": 0.3, "B": 0.2, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021004:  # IPK 3.78 - Mahasiswa dengan nilai tinggi
                nilai_weights = {"A": 0.3, "A-": 0.4, "B+": 0.2, "B": 0.1, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021005:  # IPK 3.12 - Mahasiswa dengan nilai menengah-rendah
                nilai_weights = {"A": 0.0, "A-": 0.1, "B+": 0.2, "B": 0.4, "B-": 0.2, "C+": 0.1, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021006:  # IPK 3.65 - Mahasiswa dengan nilai menengah-tinggi
                nilai_weights = {"A": 0.1, "A-": 0.3, "B+": 0.4, "B": 0.2, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021007:  # IPK 2.98 - Mahasiswa dengan nilai rendah
                nilai_weights = {"A": 0.0, "A-": 0.0, "B+": 0.1, "B": 0.3, "B-": 0.3, "C+": 0.2, "C": 0.1, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021008:  # IPK 3.88 - Mahasiswa dengan nilai sangat tinggi
                nilai_weights = {"A": 0.4, "A-": 0.4, "B+": 0.2, "B": 0.0, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021009:  # IPK 3.25 - Mahasiswa dengan nilai menengah
                nilai_weights = {"A": 0.0, "A-": 0.2, "B+": 0.3, "B": 0.4, "B-": 0.1, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021010:  # IPK 3.55 - Mahasiswa dengan nilai menengah-tinggi
                nilai_weights = {"A": 0.1, "A-": 0.2, "B+": 0.4, "B": 0.3, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021011:  # IPK 3.72 - Mahasiswa dengan nilai tinggi
                nilai_weights = {"A": 0.2, "A-": 0.3, "B+": 0.3, "B": 0.2, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021012:  # IPK 3.18 - Mahasiswa dengan nilai menengah-rendah
                nilai_weights = {"A": 0.0, "A-": 0.1, "B+": 0.2, "B": 0.4, "B-": 0.2, "C+": 0.1, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021013:  # IPK 3.95 - Mahasiswa dengan nilai sangat tinggi
                nilai_weights = {"A": 0.5, "A-": 0.3, "B+": 0.2, "B": 0.0, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021014:  # IPK 3.33 - Mahasiswa dengan nilai menengah
                nilai_weights = {"A": 0.0, "A-": 0.1, "B+": 0.3, "B": 0.4, "B-": 0.2, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            elif nim == 2021015:  # IPK 3.68 - Mahasiswa dengan nilai tinggi
                nilai_weights = {"A": 0.2, "A-": 0.3, "B+": 0.3, "B": 0.2, "B-": 0.0, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            else:
                nilai_weights = {"A": 0.1, "A-": 0.2, "B+": 0.3, "B": 0.3, "B-": 0.1, "C+": 0.0, "C": 0.0, "D": 0.0, "E": 0.0, "K": 0.0}
            
            nilai = random.choices(list(nilai_weights.keys()), weights=list(nilai_weights.values()))[0]
            
            connection.execute(
                sa.text("""
                    INSERT INTO nilai (nim, tahun, semester, kode_matakuliah, nama_matakuliah, nilai, created_at, updated_at)
                    VALUES (:nim, :tahun, :semester, :kode_matakuliah, :nama_matakuliah, :nilai, :created_at, :updated_at)
                """),
                {
                    "nim": nim_str,
                    "tahun": tahun,
                    "semester": semester,
                    "kode_matakuliah": course["kode"],
                    "nama_matakuliah": course["nama"],
                    "nilai": nilai,
                    "created_at": datetime.utcnow(),
                    "updated_at": datetime.utcnow()
                }
            )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_saw_results_id'), table_name='saw_results')
    op.drop_table('saw_results')
    op.drop_index(op.f('ix_saw_final_results_id'), table_name='saw_final_results')
    op.drop_table('saw_final_results')
    op.drop_table('nilai')
    op.drop_table('klasifikasi_kelulusan')
    op.drop_index(op.f('ix_saw_criteria_id'), table_name='saw_criteria')
    op.drop_table('saw_criteria')
    op.drop_table('mahasiswa')
    # ### end Alembic commands ### 