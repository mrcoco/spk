version: '3.8'

services:
  frontend:
    build: 
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./src/frontend:/usr/share/nginx/html:ro
      - ./src/frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - spk-network

  backend:
    build: 
      context: ./src/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=spk_user
      - POSTGRES_PASSWORD=spk_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=spk_db
    volumes:
      - ./src/backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - spk-network

  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=spk_user
      - POSTGRES_PASSWORD=spk_password
      - POSTGRES_DB=spk_db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spk_user -d spk_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - spk-network

networks:
  spk-network:
    driver: bridge